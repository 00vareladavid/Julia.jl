
Benchmarks/ Optimization, Quality-Analysis(QA), CI, Test-Driven-Development (TDD), Behaviour-Driven-Development (BDD), anything "Quality" related goes here:


== Benchmarks ==
* [http://speed.julialang.org Microbenchmark timings are on speed.julialang.org]
    ** [http://speed.julialang.org/timeline/ ]

* [https://github.com/JuliaLang/julia/blob/master/test/perf/kernel/raytracer.jl Raytracer in the Julia kernel]
* More [https://github.com/jakebolewski/rays Raytracers].


== Optimization == 
* [http://juliaopt.org/ JuliaOpt] is an umbrella group for Julia-based optimization-related projects.
* [https://github.com/Staross/JuliaCMAES CMA-ES port] - a mix of the original minimal matlab implementation (purecmaes.m) and the full one (cmaes.m).
* [https://github.com/robertfeldt/BlackBoxOptim.jl BlackBoxOptim.jl] is a (experimental, work-in-progress) global optimization framework for Julia, supporting both multi- and single-objective optimization problems, focused on (meta-)heuristic/stochastic algorithms (DE, PSO, CMA-ES etc).


== Profiling ==
Profile your code
* Use [http://docs.julialang.org/en/latest/stdlib/profile/ IProfile] in Base to profile your code.


