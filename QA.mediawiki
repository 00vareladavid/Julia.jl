Benchmarks/ Optimization, Quality-Analysis(QA), Test-Driven-Development (TDD), Behaviour-Driven-Development (BDD), Unit testing, anything "Software Quality" related goes here:


= BENCHMARKS =
* [http://speed.julialang.org Microbenchmark timings are on speed.julialang.org]
    ** [http://speed.julialang.org/timeline/ Timeline]
* [https://github.com/JuliaLang/julia/blob/master/test/perf/kernel/raytracer.jl Raytracer in the Julia kernel]
* More [https://github.com/jakebolewski/rays Raytracers].
* Criterion.jl:: [https://github.com/jakebolewski/Criterion.jl A port of the Haskell's Criterion and Clojure's Criterium library] to Julia, that runs benchmarks, analyzing the results using various statistical techniques.
* SortPerf.jl:: [https://github.com/kmsquire/SortPerf.jl  Julia module to test the performance of sorting algorithms].


=== Logging ===
* Lumberjack.jl:: A [https://github.com/forio/Lumberjack.jl logging library] for Julia, by Westley Hennigh.

=== Optimization === 
* [http://juliaopt.org/ JuliaOpt] is an umbrella group for Julia-based optimization-related projects.
* [https://github.com/Staross/JuliaCMAES CMA-ES port] - a mix of the original minimal matlab implementation (purecmaes.m) and the full one (cmaes.m).
* [https://github.com/robertfeldt/BlackBoxOptim.jl BlackBoxOptim.jl] is a (experimental, work-in-progress) global optimization framework for Julia, supporting both multi- and single-objective optimization problems, focused on (meta-)heuristic/stochastic algorithms (DE, PSO, CMA-ES etc).

=== Profiling ===
Profile your code
* Use [http://docs.julialang.org/en/latest/stdlib/profile/ IProfile] in Base to profile your code.
* QuickCheck.jl:: [https://github.com/pao/QuickCheck.jl QuickCheck specification-based testing] for Julia. Documentation: [https://quickcheckjl.readthedocs.org/ https://quickcheckjl.readthedocs.org/]


=== Sandbox === 
* [https://github.com/amitmurthy/JDock An IJulia sandboxed by Docker containers].


= TESTING =
=== UnitTest ===
* Fixtures.jl :: provides [https://github.com/burrowsa/Fixtures.jl fixtures, mocks, matchers and patching to improve your tests] with Julia.

