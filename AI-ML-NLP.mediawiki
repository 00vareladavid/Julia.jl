AI, Algorithms, Data Mining, (Array) Data Structures, Machine Learning, NLP, ...

= ALGORITHMS =
== Markov models ==
* Pagerank.jl:: [https://github.com/purzelrakete/Pagerank.jl An experiment in pagerank on graphs in the order of billions of edges] - Currently tested with over half a billion edges.

== Common Search Algorithms ==
* NearestNeighbors.jl:: [https://github.com/johnmyleswhite/NearestNeighbors.jl Data structures for nearest neighbor search].
* Loess.jl:: is a loess implementation based on the [https://github.com/dcjones/Loess.jl fast kd-tree based approximation algorithm], a space-partitioning data structure for organizing points in a k-dimensional space.
* AhoCorasick.jl:: Julia implementation of the [https://github.com/gilesc/AhoCorasick.jl  Aho-Corasick algorithm for fast string searching].

== Clustering algorithms ==
* Clustering.jl:: Basic functions for [https://github.com/johnmyleswhite/Clustering.jl [clustering data: k-means, dp-means], etc..

== (Array) Data Structures ==
* ArrayViews.jl :: A Julia package to [https://github.com/lindahua/ArrayViews.jl explore a new system of array views].
* [https://github.com/johnmyleswhite/BloomFilters.jl Bloom filters] are a probabilistic data structure that can be used to test the inclusion and exclusion of items in a list.
* FArrayMod.jl:: [https://github.com/alsam/FArrayMod.jl provides the ability to use arbitrary starting indices for arrays] in Julia programming language.
* Graphs.jl:: [https://github.com/JuliaLang/Graphs.jl Working with graph types and algorithms in Julia. Documentation for the [http://julialang.org/Graphs.jl/index.html Graphs.jl package].
* ImmutableArrays.jl:: [https://github.com/twadleigh/ImmutableArrays.jl Statically-sized immutable vectors and matrices].
* Named.jl:: [https://github.com/HarlanH/Named.jl Julia named index and named vector types].
* [https://github.com/davidavdav/NamedArray NamedArray], a Julia type that implements a drop-in replacement of Array with named dimensions and Dict-type indexes.
* OffsetArrays.jl:: [https://github.com/alsam/OffsetArrays.jl provides the ability to use arbitrary starting indices for arrays] in Julia.
* TimeArrays.jl :: [https://github.com/milktrader/TimeArrays.jl temporary repo exploring the union of SeriesPair arrays into multicolumn arrays] with similar behavior.
* Trie.jl :: [https://github.com/JuliaLang/Trie.jl  Implementation of the trie data structure].


== Quantum Algorithms ==
* Hadamard.jl:: [https://github.com/stevengj/Hadamard.jl  Fast multidimensional Walsh-Hadamard transforms].

== Neural Networks ==
* neural.jl:: [https://github.com/compressed/neural.jl is a Julia implementation of a neural network], based on Sergio Fierens ruby version.
* neuralnetwork.jl:: [https://github.com/tomaskrehlik/neuralnetwork.jl is an implementation of label neural network] originally written for MATLAB/Octave by Andrew Ng for Coursera Machine Learning Class. 


= ML, DataScience Algorithms =
* [https://github.com/bensadeghi/DecisionTree.jl Decision Tree]
* The [https://github.com/johnmyleswhite/kNN.jl K-nearest neighbors] algorithm in Julia.
* MachineLearning.jl:: is a [https://github.com/benhamner/MachineLearning.jl Machine Learning library package] that is an attempt to consolidate common machine learning algorithms written in pure Julia and presenting a consistent API.


= NLP =
* Julia package for [https://github.com/johnmyleswhite/TextAnalysis.jl text analysis].
* [https://github.com/iamed2/PyLexYacc.jl PyLexYacc.jl], an interface to Python Lex-Yacc package that uses reflection for most of its processing. 
* [https://gist.github.com/kmsquire/7569843 Peter Norvig's spelling corrector ported to Julia], now a part of the [https://github.com/JuliaLang/DataStructures.jl DataStructures.jl] package.


== Unicode, Encodings ==
* ICU.jl :: Julia wrapper for the [https://github.com/nolta/ICU.jl International Components for Unicode (ICU) library].
* Codecs.jl:: [https://github.com/dcjones/Codecs.jl Common data encoding algorithms].
* [https://github.com/nolta/UnicodeExtras.jl UnicodeExtras.jl]
* UTF16.jl :: [https://github.com/nolta/UTF16.jl  UTF16 string type] for Julia.
* TypeCheck.jl:: a [https://github.com/astrieanna/TypeCheck.jl TypeChecker] for Julia.

